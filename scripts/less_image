#!/usr/bin/env bash
# License: GPLv3
# Credits: Felipe Facundes

# Function to display help
help() {
    echo "Usage: $0 [OPTIONS] IMAGE_DIR"
    echo "Display images in a directory using img2sixel/viu/catimg."
    echo
    echo "Options:"
    echo "  -h, --help    Show this help message and exit"
    echo
    echo "Arguments:"
    echo "  IMAGE_DIR     Directory containing images to display"
    exit 0
}

# Check for help argument
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
    help
fi

# Directory containing images
IMAGE_DIR="$1"

# Check if the provided argument is a directory
if [[ ! -d "$IMAGE_DIR" ]]; then
    echo "Error: '$IMAGE_DIR' is not a valid directory."
    help
fi

# List of image files in the directory
images=("$IMAGE_DIR"/*.[JjPp][PpNn][Gg])

# Initial index
index=0

# ANSI colors
black_on_cyan="\e[1;38;5;16;106m"
nc="\e[0m"

cmd_check() {
    [[ "${#no_cmd[*]}" -gt 1 ]] && msg=$(echo "${no_cmd[*]}" | awk 'BEGIN {first=1} {for (i=1; i<=NF; i++) \
    {if (first) {printf "%s", $i; first=0} else {printf " or %s", $i}}} END {print ""}') || msg="${no_cmd[*]}"
    [[ "$1" == "-msg" ]] && echo "Install ${msg}" && no_cmd=() && exit 1
    ! command -v "$1" 1>/dev/null && no_cmd+=(\""$2"\") && return 1 || return 0
}

imgview() {
    local file="${images[$index]}"
    
    [[ -z "$BOOKS_IMG" || "$BOOKS_IMG" == 1 ]] && cmd_check img2sixel libsixel &&
    img2sixel -w "${BOOKS_SIXEL_W:-1000}" -h "${BOOKS_SIXEL_H:-950}" "${file}" 2>/dev/null && return 0
    [[ -z "$BOOKS_IMG" || "$BOOKS_IMG" == 2 ]] && 
    cmd_check viu viu && viu -w "${BOOKS_VIU_W:-200}" -h "${BOOKS_VIU_H:-80}" "${file}" 2>/dev/null && return 0
    [[ -z "$BOOKS_IMG" || "$BOOKS_IMG" == 3 ]] && cmd_check catimg catimg &&
    catimg -w "${BOOKS_CATIMG_W:-150}" "${file}" 2>/dev/null && return 0 
    [[ -z "$BOOKS_IMG" || "$BOOKS_IMG" == 4 ]] && cmd_check chafa chafa &&
    chafa -s "${BOOKS_CHAFA_S:-70}" "${file}" 2>/dev/null && return 0

    cmd_check -msg && echo && any_file "$file" && return 1
}

# Hide the cursor
printf '\e[?25l'

# Display the first image
imgview

# Disable echo for key presses
stty -echo

# Pagination loop
while true; do
    # Display instructions with cyan background and black text
    printf '\e7\e[999H\e[K%b%s%b\e8' "$black_on_cyan" "Up: up or w | Down: down or s | Quit: q" "$nc"

    # Read user input
    read -rsn 1 key

    # Check if the key is an arrow (starts with \e)
    if [[ "$key" == $'\e' ]]; then
        read -rsn 2 -t 0.1 key2
        key="$key$key2"
    fi

    case "$key" in
        w|$'\e[A') # Up (previous image)
            if (( index > 0 )); then
                ((index--))
                imgview
            fi
            ;;
        s|$'\e[B') # Down (next image)
            if (( index < ${#images[@]} - 1 )); then
                ((index++))
                imgview
            fi
            ;;
        q|Q) # Quit
            # Re-enable echo for key presses
            stty echo
            clear
            # Show the cursor again
            printf '\e[?25h'
            break
            ;;
    esac
    [[ -t 1 ]] || exit 1
done