#!/usr/bin/env bash
# License: GPLv3
# Credits: Felipe Facundes

: <<'DOCUMENTATION'
This Bash script calculates a single MD5 hash for all files in a specified directory, 
ensuring that the order of files is consistent. If a valid directory is provided as an argument, 
it generates the hash by first computing individual MD5 hashes for each file, sorting them, 
and then hashing the sorted list. If no directory is specified, it displays usage instructions 
and relevant commands for generating the hash.
DOCUMENTATION

if [[ -d "$1" ]]; then
    directory="$1"
    find "$directory" -type f -exec md5sum {} \; | awk '{print $1}' | sort -k 2 | md5sum | awk '{print $1}'
else
    echo "Usage: ${0##*/} directory"
    cat - <<'EOF'

Relevant Commands:

tar -cf - directory | md5sum
find directory -type f -exec md5sum {} \; | awk '{print $1}' | sort -k 2 | md5sum | awk '{print $1}'
find directory -type f -exec md5sum {} + | awk '{print $1}' | LC_ALL=C sort | md5sum | awk '{print $1}'
find directory -type f -exec md5sum {} \; | awk '{print $1}' | LC_ALL=C sort | md5sum | awk '{print $1}'

This first summarizes all of the file contents individually, in a predictable order,
then passes that list of file names and MD5 hashes to be hashed itself,
giving a single value that only changes when the content of one of the files in the tree changes.
EOF
fi
