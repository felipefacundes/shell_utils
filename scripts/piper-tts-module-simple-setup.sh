#!/usr/bin/env bash
# License: GPLv3
# Credits: Felipe Facundes

# Simplified version without whiptail

CONFIG_DIR="$HOME/.config/speech-dispatcher"
MODULES_DIR="$CONFIG_DIR/modules"
SPEECHD_CONF="$CONFIG_DIR/speechd.conf"
PIPER_VOICES_DIR="/usr/share/piper-voices"

# Check if voices directory exists
if [ ! -d "$PIPER_VOICES_DIR" ]; then
    echo "Error: Directory $PIPER_VOICES_DIR not found!"
    exit 1
fi

# Create configuration directories
mkdir -p "$MODULES_DIR"

# Search for .onnx files
echo "Searching for Piper voice models..."
onnx_files=($(find "$PIPER_VOICES_DIR" -name "*.onnx" -type f))

if [ ${#onnx_files[@]} -eq 0 ]; then
    echo "No .onnx files found!"
    exit 1
fi

echo "Found ${#onnx_files[@]} voices:"
echo ""

# List available voices
index=1
declare -A voice_map
for file in "${onnx_files[@]}"; do
    relative_path="${file#$PIPER_VOICES_DIR/}"
    language=$(echo "$relative_path" | cut -d'/' -f1)
    model_name=$(basename "$file" .onnx)
    echo "$index. $model_name ($language)"
    voice_map[$index]="$file"
    ((index++))
done

echo ""
read -p "Select the default voice number (1-${#onnx_files[@]}): " choice

if [[ ! "$choice" =~ ^[0-9]+$ ]] || [ "$choice" -lt 1 ] || [ "$choice" -gt ${#onnx_files[@]} ]; then
    echo "Invalid selection!"
    exit 1
fi

default_voice="${voice_map[$choice]}"
default_relative_path="${default_voice#$PIPER_VOICES_DIR/}"
default_language=$(echo "$default_relative_path" | cut -d'/' -f1)
default_model_name=$(basename "$default_voice" .onnx)

# Create configuration file
PIPER_CONF="$MODULES_DIR/piper.conf"

cat > "$PIPER_CONF" << EOF
# Automatic configuration for Piper TTS module
# Automatically generated by configuration script

# Main synthesis command
GenericExecuteSynth "echo '\$DATA' | piper-tts --model $default_voice --output-raw | aplay -r 22050 -f S16_LE -t raw -"

# Module dependencies
GenericCmdDependency "piper-tts"
GenericCmdDependency "aplay"

# Define the default voice
AddVoice "$default_language" "MALE1" "$default_model_name"

# Set default voice for general use
DefaultVoice "$default_model_name"

EOF

# Add other voices
for file in "${onnx_files[@]}"; do
    if [ "$file" != "$default_voice" ]; then
        relative_path="${file#$PIPER_VOICES_DIR/}"
        language=$(echo "$relative_path" | cut -d'/' -f1)
        model_name=$(basename "$file" .onnx)
        
        gender="MALE1"
        if [[ "$model_name" =~ female|feminin|mulher ]]; then
            gender="FEMALE1"
        fi
        
        echo "AddVoice \"$language\" \"$gender\" \"$model_name\"" >> "$PIPER_CONF"
    fi
done

# Configure speechd.conf
if [ -f "$SPEECHD_CONF" ]; then
    grep -v "piper.conf" "$SPEECHD_CONF" > "$SPEECHD_CONF.tmp" && mv "$SPEECHD_CONF.tmp" "$SPEECHD_CONF"
fi

echo 'AddModule "piper" "sd_generic" "piper.conf"' >> "$SPEECHD_CONF"
systemctl --user restart speech-dispatcher
echo ""
echo "Configuration completed!"
echo "Default voice: $default_model_name ($default_language)"
echo "Configuration file: $PIPER_CONF"
echo "Total voices configured: ${#onnx_files[@]}"
echo
echo "Test voice:"
echo "spd-say 'Hello, World!'"